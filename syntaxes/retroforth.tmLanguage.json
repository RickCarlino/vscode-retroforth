{
  "name": "RetroForth",
  "autoClosingPairs": [
    { "open": "[", "close": "]" },
    { "open": "{", "close": "}" },
    { "open": "\"", "close": "", "notIn": ["string", "comment"] },
    { "open": "(", "close": ")", "notIn": ["string", "comment"] }
  ],
  "patterns": [
    {
      "name": "keyword.control.retroforth",
      "match": "\\b({{|--reveal---|}}|[\\[\\]]|{|}|;|repeat|again|,|const|double:const|double:var|FALSE|I|J|K|s,|s:const|TRUE|var|var-n|var-s)\\b"
    },
    {
      "name": "constant.numeric.integer.retroforth",
      "match": "#\\d+"
    },
    {
      "name": "constant.numeric.float.retroforth",
      "match": "\\.\\d+"
    },
    {
      "name": "string.quoted.single.retroforth",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "name": "constant.character.escape.retroforth",
          "match": "_"
        }
      ]
    },
    {
      "name": "variable.other.readwrite.retroforth",
      "match": "\\b(!|&|@)\\b"
    },
    {
      "name": "support.function.retroforth",
      "match": "\\b(\\$|\\\\|\\^|`|\\|)\\b"
    },
    {
      "name": "keyword.operator.word-definition.retroforth",
      "match": ":\\w+"
    },
    {
      "name": "comment.line.retroforth",
      "match": "\\(.*\\)"
    }
  ],
  "scopeName": "source.retroforth"
}
